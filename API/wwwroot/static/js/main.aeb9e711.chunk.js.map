{"version":3,"sources":["app/layout/NavBar.js","features/products/modal-form/ProductModalForm.js","app/api/agent.js","features/products/modal-form/DeleteConfirmationModal.js","features/products/table/ProductTable.js","features/customers/modal-form/CustomerModalForm.js","features/customers/modal-form/DeleteConfirmationModal.js","features/customers/table/CustomerTable.js","features/stores/modal-form/StoreModalForm.js","features/stores/modal-form/DeleteConfirmationModal.js","features/stores/table/StoreTable.js","features/sales/modal-form/SalesModalForm.js","features/sales/modal-form/DeleteConfirmationModal.js","features/sales/table/SalesTable.js","app/layout/App.js","reportWebVitals.js","index.js"],"names":["NavBar","Menu","inverted","fixed","Container","Item","header","src","alt","style","marginRight","as","NavLink","to","name","ProductModalForm","props","initialState","selectedProduct","id","price","useState","product","setProduct","handleInputChange","event","target","value","Modal","onClose","setOpenEditModal","onOpen","open","openEditModal","Header","Content","image","Description","Form","onSubmit","createOrEdit","autoComplete","Input","placeholder","onChange","type","Button","floated","content","labelPosition","icon","positive","color","onClick","Actions","axios","defaults","baseURL","process","responseBody","response","data","requests","url","get","then","body","post","put","delete","agent","Customers","list","create","customer","update","del","Products","Stores","store","Sales","sales","DeleteConfirmationModal","basic","setOpenDeleteConfirmationModal","openDeleteConfirmationModal","size","Icon","deleteSales","ProductTable","editSelectedProduct","handleSelectProduct","products","setProducts","undefined","setSelectedProduct","find","x","useEffect","filter","Table","celled","Row","HeaderCell","Body","map","Cell","deleteSelectedProduct","CustomerModalForm","selectedCustomer","address","setCustomer","CustomerTable","editSelectedCustomer","handleSelectCustomer","customers","setCustomers","setSelectedCustomer","deleteSelectedCustomer","StoreModalForm","selectedStore","setStore","StoreTable","editSelectedStore","handleSelectStore","stores","setStores","setSelectedStore","deleteSelectedStore","SalesModalForm","selectedSales","storeId","customerId","productId","dateSold","setSales","productOptions","container","key","text","storeOptions","customerOptions","iconPosition","dateFormat","display","marginBottom","console","log","Select","options","SalesTable","editSelectedSales","handleSelectSales","setSelectedSales","sale","deleteSelectedSales","App","marginTop","path","component","SaleTable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aeb9e711.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu } from \"semantic-ui-react\";\r\n\r\nexport default function NavBar() {\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item header>\r\n          <img src=\"/logo192.png\" alt=\"logo\" style={{ marginRight: 10 }} />\r\n          Mvp Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/customers\" name=\"Customers\" />\r\n        <Menu.Item as={NavLink} to=\"/products\" name=\"Products\" />\r\n        <Menu.Item as={NavLink} to=\"/stores\" name=\"Stores\" />\r\n        <Menu.Item as={NavLink} to=\"/sales\" name=\"Sales\" />\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"semantic-ui-react\";\r\n\r\nexport default function ProductModalForm(props) {\r\n  const initialState = props.selectedProduct ?? {\r\n    id: \"\",\r\n    name: \"\",\r\n    price: \"\",\r\n  };\r\n\r\n  const [product, setProduct] = useState(initialState);\r\n\r\n  function handleSubmit() {\r\n    props.createOrEdit(product);\r\n    props.setOpenEditModal(false);\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setProduct({ ...product, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpenEditModal(false)}\r\n      onOpen={() => props.setOpenEditModal(true)}\r\n      open={props.openEditModal}\r\n    >\r\n      <Modal.Header>Update Product Details</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Form.Input\r\n              placeholder=\"Name\"\r\n              value={product.name}\r\n              name=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Input\r\n              placeholder=\"Price\"\r\n              name=\"price\"\r\n              type=\"number\"\r\n              value={product.price}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              content=\"Save\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              type=\"submit\"\r\n              positive\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              color=\"black\"\r\n              onClick={() => props.setOpenEditModal(false)}\r\n            >\r\n              Nope\r\n            </Button>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions></Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url) => axios.get(url).then(responseBody),\r\n  post: (url, body) => axios.post(url, body).then(responseBody),\r\n  put: (url, body) => axios.put(url, body).then(responseBody),\r\n  del: (url) => axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst Customers = {\r\n  list: () => requests.get(\"/customer\"),\r\n  create: (customer) => requests.post(\"/customer\", customer),\r\n  update: (customer) => requests.put(`/customer/${customer.id}`, customer),\r\n  del: (id) => requests.del(`/customer/${id}`),\r\n};\r\n\r\nconst Products = {\r\n  list: () => requests.get(\"/product\"),\r\n  create: (product) => requests.post(\"/product\", product),\r\n  update: (product) => requests.put(`/product/${product.id}`, product),\r\n  del: (id) => requests.del(`/product/${id}`),\r\n};\r\n\r\nconst Stores = {\r\n  list: () => requests.get(\"/store\"),\r\n  create: (store) => requests.post(\"/store\", store),\r\n  update: (store) => requests.put(`/store/${store.id}`, store),\r\n  del: (id) => requests.del(`/store/${id}`),\r\n};\r\n\r\nconst Sales = {\r\n  list: () => requests.get(\"/sales\"),\r\n  create: (sales) => requests.post(\"/sales\", sales),\r\n  update: (sales) => requests.put(`/sales/${sales.id}`, sales),\r\n  del: (id) => requests.del(`/sales/${id}`),\r\n};\r\n\r\nconst agent = {\r\n  Customers,\r\n  Products,\r\n  Stores,\r\n  Sales,\r\n};\r\n\r\nexport default agent;\r\n","import React from \"react\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nexport default function DeleteConfirmationModal(props) {\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => props.setOpenDeleteConfirmationModal(false)}\r\n      onOpen={() => props.setOpenDeleteConfirmationModal(true)}\r\n      open={props.openDeleteConfirmationModal}\r\n      size=\"small\"\r\n    >\r\n      <Header icon>\r\n        <Icon name=\"archive\" />\r\n        Delete Confirmation\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>Are you sure you want to delete this ?</p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          basic\r\n          color=\"red\"\r\n          inverted\r\n          onClick={() => props.setOpenDeleteConfirmationModal(false)}\r\n        >\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button\r\n          color=\"green\"\r\n          inverted\r\n          onClick={() => props.deleteSales(props.selectedProduct.id)}\r\n        >\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport ProductModalForm from \"../modal-form/ProductModalForm\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport agent from \"../../../app/api/agent\";\r\nimport DeleteConfirmationModal from \"../modal-form/DeleteConfirmationModal\";\r\n\r\nexport default function ProductTable() {\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [openDeleteConfirmationModal, setOpenDeleteConfirmationModal] =\r\n    useState(false);\r\n\r\n  function deleteSelectedProduct(product) {\r\n    handleSelectProduct(product ? product.id : 0);\r\n    setOpenDeleteConfirmationModal(true);\r\n  }\r\n\r\n  function editSelectedProduct(product) {\r\n    handleSelectProduct(product ? product.id : 0);\r\n    setOpenEditModal(true);\r\n  }\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    agent.Products.list().then((response) => {\r\n      setProducts(response);\r\n    });\r\n  }, []);\r\n\r\n  function handleSelectProduct(id) {\r\n    setSelectedProduct(products.find((x) => x.id === id));\r\n  }\r\n\r\n  function handleCreateOrEditProduct(product) {\r\n    if (product.id) {\r\n      agent.Products.update(product).then(() => {\r\n        setProducts([...products.filter((x) => x.id !== product.id), product]);\r\n      });\r\n    } else {\r\n      product.id = 0;\r\n      agent.Products.create(product).then(() => {\r\n        setProducts([...products, { ...product, product }]);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDeleteProduct(id) {\r\n    agent.Products.del(id).then(() => {\r\n      setOpenDeleteConfirmationModal(false);\r\n      setProducts([...products.filter((x) => x.id !== id)]);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        positive\r\n        content=\"Create Product\"\r\n        onClick={() => editSelectedProduct(undefined)}\r\n      />\r\n\r\n      {openEditModal && (\r\n        <ProductModalForm\r\n          setOpenEditModal={setOpenEditModal}\r\n          openEditModal={openEditModal}\r\n          selectedProduct={selectedProduct}\r\n          createOrEdit={handleCreateOrEditProduct}\r\n        />\r\n      )}\r\n\r\n      {openDeleteConfirmationModal && (\r\n        <DeleteConfirmationModal\r\n          setOpenDeleteConfirmationModal={setOpenDeleteConfirmationModal}\r\n          openDeleteConfirmationModal={openDeleteConfirmationModal}\r\n          selectedProduct={selectedProduct}\r\n          deleteSales={handleDeleteProduct}\r\n        />\r\n      )}\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Price</Table.HeaderCell>\r\n            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {products.map((product) => (\r\n            <Table.Row key={product.id}>\r\n              <Table.Cell>{product.name}</Table.Cell>\r\n              <Table.Cell>{product.price}</Table.Cell>\r\n              <Table.Cell>\r\n                <Button\r\n                  color=\"yellow\"\r\n                  onClick={() => editSelectedProduct(product)}\r\n                >\r\n                  <Icon name=\"edit\" />\r\n                  Edit\r\n                </Button>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Button\r\n                  color=\"red\"\r\n                  onClick={() => deleteSelectedProduct(product)}\r\n                >\r\n                  <Icon name=\"trash\" />\r\n                  Delete\r\n                </Button>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"semantic-ui-react\";\r\n\r\nexport default function CustomerModalForm(props) {\r\n  const initialState = props.selectedCustomer ?? {\r\n    id: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  const [customer, setCustomer] = useState(initialState);\r\n\r\n  function handleSubmit() {\r\n    props.createOrEdit(customer);\r\n    props.setOpenEditModal(false);\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setCustomer({ ...customer, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpenEditModal(false)}\r\n      onOpen={() => props.setOpenEditModal(true)}\r\n      open={props.openEditModal}\r\n    >\r\n      <Modal.Header>Update Customer Details</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Form.Input\r\n              placeholder=\"Name\"\r\n              value={customer.name}\r\n              name=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Input\r\n              placeholder=\"Address\"\r\n              name=\"address\"\r\n              value={customer.address}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              content=\"Save\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              type=\"submit\"\r\n              positive\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              color=\"black\"\r\n              onClick={() => props.setOpenEditModal(false)}\r\n            >\r\n              Nope\r\n            </Button>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions></Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nexport default function DeleteConfirmationModal(props) {\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => props.setOpenDeleteConfirmationModal(false)}\r\n      onOpen={() => props.setOpenDeleteConfirmationModal(true)}\r\n      open={props.openDeleteConfirmationModal}\r\n      size=\"small\"\r\n    >\r\n      <Header icon>\r\n        <Icon name=\"archive\" />\r\n        Delete Confirmation\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>Are you sure you want to delete this ?</p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          basic\r\n          color=\"red\"\r\n          inverted\r\n          onClick={() => props.setOpenDeleteConfirmationModal(false)}\r\n        >\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button\r\n          color=\"green\"\r\n          inverted\r\n          onClick={() => props.deleteSales(props.selectedCustomer.id)}\r\n        >\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport CustomerModalForm from \"../modal-form/CustomerModalForm\";\r\nimport DeleteConfirmationModal from \"../modal-form/DeleteConfirmationModal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport agent from \"../../../app/api/agent\";\r\n\r\nexport default function CustomerTable() {\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [openDeleteConfirmationModal, setOpenDeleteConfirmationModal] =\r\n    useState(false);\r\n\r\n  function deleteSelectedCustomer(customer) {\r\n    handleSelectCustomer(customer ? customer.id : 0);\r\n    setOpenDeleteConfirmationModal(true);\r\n  }\r\n\r\n  function editSelectedCustomer(customer) {\r\n    handleSelectCustomer(customer ? customer.id : 0);\r\n    setOpenEditModal(true);\r\n  }\r\n\r\n  const [customers, setCustomers] = useState([]);\r\n  const [selectedCustomer, setSelectedCustomer] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    agent.Customers.list().then((response) => {\r\n      setCustomers(response);\r\n    });\r\n  }, []);\r\n\r\n  function handleSelectCustomer(id) {\r\n    setSelectedCustomer(customers.find((x) => x.id === id));\r\n  }\r\n\r\n  function handleCreateOrEditCustomer(customer) {\r\n    if (customer.id) {\r\n      agent.Customers.update(customer).then(() => {\r\n        setCustomers([\r\n          ...customers.filter((x) => x.id !== customer.id),\r\n          customer,\r\n        ]);\r\n      });\r\n    } else {\r\n      customer.id = 0;\r\n      agent.Customers.create(customer).then(() => {\r\n        setCustomers([...customers, { ...customer, customer }]);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDeleteCustomer(id) {\r\n    agent.Customers.del(id).then(() => {\r\n      setOpenDeleteConfirmationModal(false);\r\n      setCustomers([...customers.filter((x) => x.id !== id)]);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        positive\r\n        content=\"Create Customer\"\r\n        onClick={() => editSelectedCustomer(undefined)}\r\n      />\r\n\r\n      {openEditModal && (\r\n        <CustomerModalForm\r\n          setOpenEditModal={setOpenEditModal}\r\n          openEditModal={openEditModal}\r\n          selectedCustomer={selectedCustomer}\r\n          createOrEdit={handleCreateOrEditCustomer}\r\n        />\r\n      )}\r\n\r\n      {openDeleteConfirmationModal && (\r\n        <DeleteConfirmationModal\r\n          setOpenDeleteConfirmationModal={setOpenDeleteConfirmationModal}\r\n          openDeleteConfirmationModal={openDeleteConfirmationModal}\r\n          selectedCustomer={selectedCustomer}\r\n          deleteSales={handleDeleteCustomer}\r\n        />\r\n      )}\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Address</Table.HeaderCell>\r\n            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {customers.map((customer) => (\r\n            <Table.Row key={customer.id}>\r\n              <Table.Cell>{customer.name}</Table.Cell>\r\n              <Table.Cell>{customer.address}</Table.Cell>\r\n              <Table.Cell>\r\n                <Button\r\n                  color=\"yellow\"\r\n                  onClick={() => editSelectedCustomer(customer)}\r\n                >\r\n                  <Icon name=\"edit\" />\r\n                  Edit\r\n                </Button>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Button\r\n                  color=\"red\"\r\n                  onClick={() => deleteSelectedCustomer(customer)}\r\n                >\r\n                  <Icon name=\"trash\" />\r\n                  Delete\r\n                </Button>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, Form } from \"semantic-ui-react\";\r\n\r\nexport default function StoreModalForm(props) {\r\n  const initialState = props.selectedStore ?? {\r\n    id: \"\",\r\n    name: \"\",\r\n    address: \"\",\r\n  };\r\n\r\n  const [store, setStore] = useState(initialState);\r\n\r\n  function handleSubmit() {\r\n    props.createOrEdit(store);\r\n    props.setOpenEditModal(false);\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    const { name, value } = event.target;\r\n    setStore({ ...store, [name]: value });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpenEditModal(false)}\r\n      onOpen={() => props.setOpenEditModal(true)}\r\n      open={props.openEditModal}\r\n    >\r\n      <Modal.Header>Update Store Details</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Form.Input\r\n              placeholder=\"Name\"\r\n              value={store.name}\r\n              name=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Input\r\n              placeholder=\"Address\"\r\n              name=\"address\"\r\n              value={store.address}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              content=\"Save\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              type=\"submit\"\r\n              positive\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              color=\"black\"\r\n              onClick={() => props.setOpenEditModal(false)}\r\n            >\r\n              Nope\r\n            </Button>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions></Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nexport default function DeleteConfirmationModal(props) {\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => props.setOpenDeleteConfirmationModal(false)}\r\n      onOpen={() => props.setOpenDeleteConfirmationModal(true)}\r\n      open={props.openDeleteConfirmationModal}\r\n      size=\"small\"\r\n    >\r\n      <Header icon>\r\n        <Icon name=\"archive\" />\r\n        Delete Confirmation\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>Are you sure you want to delete this ?</p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          basic\r\n          color=\"red\"\r\n          inverted\r\n          onClick={() => props.setOpenDeleteConfirmationModal(false)}\r\n        >\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button\r\n          color=\"green\"\r\n          inverted\r\n          onClick={() => props.deleteSales(props.selectedStore.id)}\r\n        >\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport StoreModalForm from \"../modal-form/StoreModalForm\";\r\nimport DeleteConfirmationModal from \"../modal-form/DeleteConfirmationModal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport agent from \"../../../app/api/agent\";\r\n\r\nexport default function StoreTable() {\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [openDeleteConfirmationModal, setOpenDeleteConfirmationModal] =\r\n    useState(false);\r\n\r\n  function deleteSelectedStore(store) {\r\n    handleSelectStore(store ? store.id : 0);\r\n    setOpenDeleteConfirmationModal(true);\r\n  }\r\n\r\n  function editSelectedStore(store) {\r\n    handleSelectStore(store ? store.id : 0);\r\n    setOpenEditModal(true);\r\n  }\r\n\r\n  const [stores, setStores] = useState([]);\r\n  const [selectedStore, setSelectedStore] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    agent.Stores.list().then((response) => {\r\n      setStores(response);\r\n    });\r\n  }, []);\r\n\r\n  function handleSelectStore(id) {\r\n    setSelectedStore(stores.find((x) => x.id === id));\r\n  }\r\n\r\n  function handleCreateOrEditStore(store) {\r\n    if (store.id) {\r\n      agent.Stores.update(store).then(() => {\r\n        setStores([...stores.filter((x) => x.id !== store.id), store]);\r\n      });\r\n    } else {\r\n      store.id = 0;\r\n      agent.Stores.create(store).then(() => {\r\n        setStores([...stores, { ...store, store }]);\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDeleteStore(id) {\r\n    agent.Stores.del(id).then(() => {\r\n      setOpenDeleteConfirmationModal(false);\r\n      setStores([...stores.filter((x) => x.id !== id)]);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        positive\r\n        content=\"Create Store\"\r\n        onClick={() => editSelectedStore(undefined)}\r\n      />\r\n\r\n      {openEditModal && (\r\n        <StoreModalForm\r\n          setOpenEditModal={setOpenEditModal}\r\n          openEditModal={openEditModal}\r\n          selectedStore={selectedStore}\r\n          createOrEdit={handleCreateOrEditStore}\r\n        />\r\n      )}\r\n\r\n      {openDeleteConfirmationModal && (\r\n        <DeleteConfirmationModal\r\n          setOpenDeleteConfirmationModal={setOpenDeleteConfirmationModal}\r\n          openDeleteConfirmationModal={openDeleteConfirmationModal}\r\n          selectedStore={selectedStore}\r\n          deleteSales={handleDeleteStore}\r\n        />\r\n      )}\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Address</Table.HeaderCell>\r\n            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n            <Table.HeaderCell>Actions</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {stores.map((store) => (\r\n            <Table.Row key={store.id}>\r\n              <Table.Cell>{store.name}</Table.Cell>\r\n              <Table.Cell>{store.address}</Table.Cell>\r\n              <Table.Cell>\r\n                <Button color=\"yellow\" onClick={() => editSelectedStore(store)}>\r\n                  <Icon name=\"edit\" />\r\n                  Edit\r\n                </Button>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Button color=\"red\" onClick={() => deleteSelectedStore(store)}>\r\n                  <Icon name=\"trash\" />\r\n                  Delete\r\n                </Button>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Modal, Form, Select, Dropdown } from \"semantic-ui-react\";\r\nimport agent from \"../../../app/api/agent\";\r\nimport { DateInput } from \"semantic-ui-calendar-react\";\r\n\r\nexport default function SalesModalForm(props) {\r\n  const initialState = props.selectedSales ?? {\r\n    storeId: \"\",\r\n    customerId: \"\",\r\n    productId: \"\",\r\n    dateSold: \"\",\r\n  };\r\n\r\n  const [sales, setSales] = useState(initialState);\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [stores, setStores] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    agent.Products.list().then((response) => {\r\n      const productOptions = response.map((product) => {\r\n        const container = {};\r\n\r\n        container.key = product.id;\r\n        container.value = product.id;\r\n        container.text = product.name;\r\n\r\n        return container;\r\n      });\r\n\r\n      setProducts(productOptions);\r\n    });\r\n\r\n    agent.Stores.list().then((response) => {\r\n      const storeOptions = response.map((store) => {\r\n        const container = {};\r\n\r\n        container.key = store.id;\r\n        container.value = store.id;\r\n        container.text = store.name;\r\n\r\n        return container;\r\n      });\r\n\r\n      setStores(storeOptions);\r\n    });\r\n\r\n    agent.Customers.list().then((response) => {\r\n      const customerOptions = response.map((customer) => {\r\n        const container = {};\r\n\r\n        container.key = customer.id;\r\n        container.value = customer.id;\r\n        container.text = customer.name;\r\n\r\n        return container;\r\n      });\r\n\r\n      setCustomers(customerOptions);\r\n    });\r\n  }, []);\r\n\r\n  function handleSubmit() {\r\n    console.log(sales);\r\n    props.createOrEdit(sales);\r\n    props.setOpenEditModal(false);\r\n  }\r\n\r\n  function handleCustomerInputChange(event, { value }) {\r\n    console.log(value);\r\n    setSales({ ...sales, customerId: value });\r\n  }\r\n\r\n  function handleProductInputChange(event, { value }) {\r\n    console.log(value);\r\n    setSales({ ...sales, productId: value });\r\n  }\r\n\r\n  function handleStoreInputChange(event, { value }) {\r\n    console.log(value);\r\n    setSales({ ...sales, storeId: value });\r\n  }\r\n\r\n  function handleChange(event, { name, value }) {\r\n    setSales({ ...sales, dateSold: value });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      onClose={() => props.setOpenEditModal(false)}\r\n      onOpen={() => props.setOpenEditModal(true)}\r\n      open={props.openEditModal}\r\n    >\r\n      <Modal.Header>Update Sales Details</Modal.Header>\r\n      <Modal.Content image>\r\n        <Modal.Description>\r\n          <DateInput\r\n            name=\"date\"\r\n            placeholder=\"Date\"\r\n            value={sales.dateSold}\r\n            iconPosition=\"left\"\r\n            onChange={handleChange}\r\n            dateFormat=\"YYYY-MM-DD\"\r\n            style={{ display: \"block\", marginBottom: \"10px\" }}\r\n          />\r\n          <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <Select\r\n              placeholder=\"Customers\"\r\n              onChange={handleCustomerInputChange}\r\n              options={customers}\r\n              id=\"customerId\"\r\n              value={sales.customerId}\r\n              style={{ display: \"block\", marginBottom: \"10px\" }}\r\n            />\r\n            <Select\r\n              placeholder=\"Products\"\r\n              onChange={handleProductInputChange}\r\n              options={products}\r\n              name=\"productId\"\r\n              value={sales.productId}\r\n              style={{ display: \"block\", marginBottom: \"10px\" }}\r\n            />\r\n            <Select\r\n              placeholder=\"Stores\"\r\n              onChange={handleStoreInputChange}\r\n              options={stores}\r\n              name=\"storeId\"\r\n              value={sales.storeId}\r\n              style={{ display: \"block\", marginBottom: \"10px\" }}\r\n            />\r\n\r\n            <Button\r\n              floated=\"right\"\r\n              content=\"Save\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              type=\"submit\"\r\n              positive\r\n            />\r\n            <Button\r\n              floated=\"right\"\r\n              color=\"black\"\r\n              onClick={() => props.setOpenEditModal(false)}\r\n            >\r\n              Nope\r\n            </Button>\r\n          </Form>\r\n        </Modal.Description>\r\n      </Modal.Content>\r\n      <Modal.Actions></Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Header, Icon, Modal } from \"semantic-ui-react\";\r\n\r\nexport default function DeleteConfirmationModal(props) {\r\n  return (\r\n    <Modal\r\n      basic\r\n      onClose={() => props.setOpenDeleteConfirmationModal(false)}\r\n      onOpen={() => props.setOpenDeleteConfirmationModal(true)}\r\n      open={props.openDeleteConfirmationModal}\r\n      size=\"small\"\r\n    >\r\n      <Header icon>\r\n        <Icon name=\"archive\" />\r\n        Delete Confirmation\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>Are you sure you want to delete this ?</p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          basic\r\n          color=\"red\"\r\n          inverted\r\n          onClick={() => props.setOpenDeleteConfirmationModal(false)}\r\n        >\r\n          <Icon name=\"remove\" /> No\r\n        </Button>\r\n        <Button\r\n          color=\"green\"\r\n          inverted\r\n          onClick={() => props.deleteSales(props.selectedSales.id)}\r\n        >\r\n          <Icon name=\"checkmark\" /> Yes\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Table, Button, Icon } from \"semantic-ui-react\";\r\nimport SalesModalForm from \"../modal-form/SalesModalForm\";\r\nimport DeleteConfirmationModal from \"../modal-form/DeleteConfirmationModal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport agent from \"../../../app/api/agent\";\r\n\r\nexport default function SalesTable() {\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [openDeleteConfirmationModal, setOpenDeleteConfirmationModal] =\r\n    useState(false);\r\n\r\n  function deleteSelectedSales(sales) {\r\n    handleSelectSales(sales ? sales.id : 0);\r\n    setOpenDeleteConfirmationModal(true);\r\n  }\r\n\r\n  function editSelectedSales(sales) {\r\n    handleSelectSales(sales ? sales.id : 0);\r\n    setOpenEditModal(true);\r\n  }\r\n\r\n  const [sales, setSales] = useState([]);\r\n  const [selectedSales, setSelectedSales] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    agent.Sales.list().then((response) => {\r\n      setSales(response);\r\n    });\r\n  }, []);\r\n\r\n  function handleSelectSales(id) {\r\n    setSelectedSales(sales.find((x) => x.id === id));\r\n  }\r\n\r\n  function handleCreateOrEditSales(sale) {\r\n    console.log(sale);\r\n    if (sale.id) {\r\n      agent.Sales.update(sale).then(() => {\r\n        agent.Sales.list().then((response) => {\r\n          setSales(response);\r\n        });\r\n      });\r\n    } else {\r\n      sale.id = 0;\r\n      agent.Sales.create(sale).then(() => {\r\n        agent.Sales.list().then((response) => {\r\n          setSales(response);\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDeleteSales(id) {\r\n    agent.Sales.del(id).then(() => {\r\n      setOpenDeleteConfirmationModal(false);\r\n      setSales([...sales.filter((x) => x.id !== id)]);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        positive\r\n        content=\"Create Sales\"\r\n        onClick={() => editSelectedSales(undefined)}\r\n      />\r\n\r\n      {openEditModal && (\r\n        <SalesModalForm\r\n          setOpenEditModal={setOpenEditModal}\r\n          openEditModal={openEditModal}\r\n          selectedSales={selectedSales}\r\n          createOrEdit={handleCreateOrEditSales}\r\n        />\r\n      )}\r\n\r\n      {openDeleteConfirmationModal && (\r\n        <DeleteConfirmationModal\r\n          setOpenDeleteConfirmationModal={setOpenDeleteConfirmationModal}\r\n          openDeleteConfirmationModal={openDeleteConfirmationModal}\r\n          selectedSales={selectedSales}\r\n          deleteSales={handleDeleteSales}\r\n        />\r\n      )}\r\n\r\n      <Table celled>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Customer</Table.HeaderCell>\r\n            <Table.HeaderCell>Product</Table.HeaderCell>\r\n            <Table.HeaderCell>Store</Table.HeaderCell>\r\n            <Table.HeaderCell>Date Sold</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n            <Table.HeaderCell>Action</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {sales &&\r\n            sales.map((sales) => (\r\n              <Table.Row key={sales.id}>\r\n                <Table.Cell>{sales.customer.name}</Table.Cell>\r\n                <Table.Cell>{sales.product.name}</Table.Cell>\r\n                <Table.Cell>{sales.store.name}</Table.Cell>\r\n                <Table.Cell>{sales.dateSold}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    color=\"yellow\"\r\n                    onClick={() => editSelectedSales(sales)}\r\n                  >\r\n                    <Icon name=\"edit\" />\r\n                    Edit\r\n                  </Button>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    color=\"red\"\r\n                    onClick={() => deleteSelectedSales(sales)}\r\n                  >\r\n                    <Icon name=\"trash\" />\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n        </Table.Body>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport ProductTable from \"../../features/products/table/ProductTable\";\r\nimport CustomerTable from \"../../features/customers/table/CustomerTable\";\r\nimport StoreTable from \"../../features/stores/table/StoreTable\";\r\nimport SaleTable from \"../../features/sales/table/SalesTable\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <Container style={{ marginTop: \"7em\" }}>\r\n        <Route path=\"/customers\" component={CustomerTable} />\r\n        <Route path=\"/products\" component={ProductTable} />\r\n        <Route path=\"/stores\" component={StoreTable} />\r\n        <Route path=\"/sales\" component={SaleTable} />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"./app/layout/styles.css\";\r\nimport App from \"./app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}